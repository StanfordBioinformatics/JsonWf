March 31, 2014
Nathaniel Watson

CLINQC: Clinical Quality Control 


SUMMARY: 
CLINQC performs multiple QC analyses for data in FASTQ, BAM, and VCF format. Analyses are run in parallel, apart from specified dependencies, on a cluster.
Jobs are executed and monitored by Simple Job Manager (SJM; see
https://github.com/StanfordBioinformatics/SJM/blob/master/doc/MANUAL.txt). The
input to the CLINQC package is a configuration file in JASON format, which
must abide by the JSON schema packaged within the tool. The main program in the
package is clinicalQc.py, which loads the schema and conf file, validates the
conf file against the schema, and builds the SJM file, which can subsequently
be launched with the sjm command.


JSON SCHEMA:
The packaged schema schema.json defines the rules and structure of the
user-generated conf file. The schema allows in the conf file for

1) Comments - Any key prefixed with a "#" will be ignored.

2) Analyses - Multiple analyses can be defined within the top-level "analyses"
object.  An analysis is defined as an executable that an have command-line options and
arguments. Dependencies can also be specified. Each analysis object may contain a
"params" object, an "args" object, and a "qsub" object.  The params object
lays out the analysis parameters/options, while the args object contains an array of all the non-option arguments of the analysis, 
whereas the qsub object gives the Grid Engine job arguments and values for running the analysis on the cluster.

2) Resources - A top-level 'resources' object.  This is where you may 
define common keys that can appear in multiple analyses. A reference can be
made to a resource in the value of any analysis key by prefixing the
resource name with a '$', however, the reference must be at the beginning of
the value. For example, if we have the reference 
					"email": "jdoe@gmail.com"
then it is possible for all analyses to reference this email address in each
analysis's qsub object, i.e.
					 "-M": "$email"


Read the schema for a full understanding of the structure and semantics of a
conf file.



