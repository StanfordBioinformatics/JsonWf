{ 
	"version": "2.0.0",
	"resources": {
		"reference": "/srv/gsfs0/shared_data/RefGenomes/H_sapiens/hg19_female/BWA_0.7.12/hg19_female.fa",
		"bwaModule": "bwa/0.7.12",
		"PICARD": "/srv/gsfs0/software/picard-tools/picard-tools-2.0.1",
		"samtoolsModule": "samtools/1.3",
		"javaModule": "java/latest",
		"picardToolsModule": "picard-tools/2.0.1"
	},

	"globalQsub": {
		"-M": "nathankw@stanford.edu",
		"-m": "a",
		"-A": "seq_center",
		"-R": "y",
		"-l h_rt=12:00:00": ""
	},
	
	"analyses": [
		{
			"analysis": "bwa_mem",
			"program": "bwa mem",
			"enable": 1,
			"modules": ["${bwaModule}"],
			"inputFormat": "fastq",

			"outfiles": [
				{"bwa_mem_out": "${samFile}"}
			],

			"qsub": {
				"mem": "3G",
				"slots": 10 
			},
		
			"params": {
				"-t": 10 
			},
		
			"args": ["$reference","$read1","$read2",">","$bwa_mem_out"]
		},

		{
    	"analysis": "sam2Bam",
			"program": "samtools view",
      "enable": 1,
      "modules": ["${samtoolsModule}"],
      "inputFormat": "sam",

			"outfiles": [
				{"sam2Bam_out": "${samFile%.*}.bam"}
			],

			"dependencies": ["bwa_mem"],
    
      "qsub": {
        "slots": 1,
        "mem": "8G"
      },  
    
      "params": {
				"-Shb": ""
			},

			"args": ["${bwa_mem_out}",">","$sam2Bam_out"]
		},

		{
    	"analysis": "sortBam",
      "enable": 1,
      "modules": ["$javaModule","$picardToolsModule"],
      "jar": "${PICARD}/picard.jar SortSam",
      "javavm": "-Xmx6G -XX:ParallelGCThreads=5",
      "inputFormat": "bam",

			"outfiles": [
				{"sortBam_out": "${sam2Bam_out%.*}.coordSorted.bam"}
			],

			"dependencies": ["sam2Bam"],
  
      "qsub": {
        "name": "sortBam",
        "slots": 1,
        "mem": "10G"
      },  
  
      "params": {
        "INPUT=": "$sam2Bam_out",
				"OUTPUT=": "$sortBam_out",
				"SORT_ORDER=": "coordinate",
				"VALIDATION_STRINGENCY=": "LENIENT"
      }
		},

		{
			"analysis": "cleanBam",
			"description": "Cleans the provided SAM/BAM, soft-clipping beyond-end-of-reference alignments and setting MAPQ to 0 for unmapped reads.",
			"enable": 1,
			"modules": ["${javaModule}","$picardToolsModule"],
			"jar": "${PICARD}/picard.jar CleanSam",
			"javavm": "-Xmx6G -XX:ParallelGCThreads=5",
			"inputFormat": "bam",

			"outfiles": [
				{"cleanBam_out": "${sortBam_out%.*}.clean.bam"}
			],

			"dependencies": ["sortBam"],

			"qsub": {
				"name": "cleanBam",
				"slots": 1,
				"mem": "10G"
			},

			"params": {
				"INPUT=": "$sortBam_out",
				"OUTPUT=": "$cleanBam_out",
				"VALIDATION_STRINGENCY=": "LENIENT"
			}
		},


		{
			"analysis": "MarkDuplicates",
			"description": "Removes optical and PCR duplicates.",
			"enable": 1,
			"modules": ["${javaModule}","$picardToolsModule"],
			"jar": "${PICARD}/picard.jar MarkDuplicates",
			"javavm": "-Xmx6G -XX:ParallelGCThreads=5",
			"inputFormat": "bam",

			"outfiles": [
				{"dedupBam_out": "${cleanBam_out%.*}.dedup.bam"}
			],

			"dependencies": ["cleanBam"],

			"qsub": {
				"name": "MarkDuplicates",
				"slots": 1,
				"mem": "10G"
			},

			"params": {
				"INPUT=": "$cleanBam_out",
				"OUTPUT=": "$dedupBam_out",
				"REMOVE_DUPLICATES=": "true",
				"METRICS_FILE=": "${dedupBam_out%.*}_dedupMetrics.txt",
				"VALIDATION_STRINGENCY=": "LENIENT"
			}
		},


		{
			"analysis": "CollectAlignmentSummaryMetrics",
			"enable": 1,
			"modules": ["${javaModule}","$picardToolsModule"],
			"jar": "${PICARD}/picard.jar CollectAlignmentSummaryMetrics",
			"javavm": "-Xmx2G -XX:ParallelGCThreads=5",
			"inputFormat": "bam",

			"dependencies": ["MarkDuplicates"],

			"qsub": {
				"name": "CollectAlignmentSummaryMetrics",
				"slots": 1,
				"mem": "6G"
			},

			"params": {
				"INPUT=": "$dedupBam_out",
				"OUTPUT=": "${dedupBam_out%.*}_alnMetrics.txt",
				"REFERENCE_SEQUENCE=": "$reference",
				"VALIDATION_STRINGENCY=": "LENIENT"
			}
		},

		
		{
    	"analysis": "BuildBamIndex",
      "enable": 1,
      "modules": ["$javaModule","$picardToolsModule"],
      "jar": "${PICARD}/picard.jar BuildBamIndex",
      "javavm": "-Xmx6G -XX:ParallelGCThreads=5",
      "inputFormat": "bam",

			"outfiles": [
				{"buildBamIndex_out": "${dedupBam_out%.*}.bai"}
			],

			"dependencies": ["CollectAlignmentSummaryMetrics"],
  
      "qsub": {
        "name": "BuildBamIndex",
        "slots": 1,
        "mem": "10G"
      },  
  
      "params": {
        "INPUT=": "$dedupBam_out",
				"OUTPUT=": "$buildBamIndex_out",
				"VALIDATION_STRINGENCY=": "LENIENT"
      }  
		}
	]
}
